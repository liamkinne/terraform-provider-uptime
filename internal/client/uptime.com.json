{
  "openapi": "3.0.2",
  "info": {
    "title": "Uptime.com OpenAPI Schema",
    "version": ""
  },
  "paths": {
    "/api/v1/alerts/": {
      "get": {
        "operationId": "get_alertlist",
        "description": "List all alerts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "state_is_up",
            "required": false,
            "in": "query",
            "description": "Filter by alert state up/down.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "check_pk",
            "required": false,
            "in": "query",
            "description": "Filter by check ID.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "check_monitoring_service_type",
            "required": false,
            "in": "query",
            "description": "Filter by check type.",
            "schema": {
              "type": "string",
              "enum": [
                "HTTP",
                "RUM",
                "RUM2",
                "ICMP",
                "SSH",
                "TCP",
                "UDP",
                "DNS",
                "SMTP",
                "POP",
                "IMAP",
                "NTP",
                "BLACKLIST",
                "WHOIS",
                "MALWARE",
                "SSL_CERT",
                "TRANSACTION",
                "API",
                "HEARTBEAT",
                "WEBHOOK",
                "GROUP",
                "PAGESPEED"
              ]
            }
          },
          {
            "name": "check_tag",
            "required": false,
            "in": "query",
            "description": "Filter by tag name (can be specified multiple times.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "Start date in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "End date in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Incidents"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "alerts"
        ]
      }
    },
    "/api/v1/alerts/alert/{pk}/root-cause/": {
      "get": {
        "operationId": "get_alert_alert_root_cause",
        "description": "Get the details of an alert for a specific location along with any root cause analysis data",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "alerts"
        ]
      }
    },
    "/api/v1/alerts/{pk}/": {
      "get": {
        "operationId": "get_alert_detail",
        "description": "Get the details of a single alert",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidents"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "alerts"
        ]
      }
    },
    "/api/v1/alerts/{pk}/ignore/": {
      "post": {
        "operationId": "post_alert_ignore",
        "description": "Toggle the ignore state of an alert",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "alerts"
        ]
      }
    },
    "/api/v1/auth/": {
      "get": {
        "operationId": "get_auth_list",
        "description": "Provides APIs for generating access tokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/account-usage/": {
      "get": {
        "operationId": "get_auth_account_usage",
        "description": "Download a CSV showing detailed usage info of your current plan.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/login/": {
      "post": {
        "operationId": "post_auth_login",
        "description": "Login with an email & password to retrieve an access token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthTokenWithTOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthTokenWithTOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthTokenWithTOTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenWithTOTP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/me/": {
      "get": {
        "operationId": "get_auth_me",
        "description": "Shows the details of the authenticated user",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/reset-password/": {
      "get": {
        "operationId": "get_auth_reset_password",
        "description": "Sends an email with a reset password link",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordReset"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "post": {
        "operationId": "post_auth_reset_password",
        "description": "Sends an email with a reset password link",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordReset"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/send-magic-link/": {
      "post": {
        "operationId": "post_send_magic_link",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MagicLink"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MagicLink"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MagicLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagicLink"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/subaccounts/": {
      "get": {
        "operationId": "get_auth_subaccounts",
        "description": "Lists all subaccounts of this account\n\nYou may select the active subaccount for any API request\nby using a HTTP header or query string parameter\nto specify the subaccount ID as follows:\n\n<pre>https://uptime.com/api/v1/dashboard/?subaccount=123</pre>\n\nor\n\n<pre>curl -H \"X-Subaccount: 123\" -H \"Authorization: token xxxx\" https://uptime.com/api/v1/dashboard/</pre>\n\n<br />",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "post": {
        "operationId": "post_auth_subaccounts",
        "description": "Creates a new subaccount\n\nCreates a new subaccount for this account which includes one pack which is deducted from the main account.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/subaccounts/{pk}/": {
      "get": {
        "operationId": "get_auth_subaccount",
        "description": "Get subaccount details",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      },
      "patch": {
        "operationId": "patch_auth_subaccount",
        "description": "Renames subaccount",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/subaccounts/{pk}/allocation/": {
      "post": {
        "operationId": "post_auth_subaccount_packs",
        "description": "Transfers packs to subaccount from main account and vice versa\n\nIf num is positive packs are transferred from main account to subaccount. If num is negative\npacks are deducted from subaccount and added to the main account.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountPacks"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountPacks"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountPacks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubaccountPacks"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/auth/validate-magic-link/": {
      "post": {
        "operationId": "post_validate_magic_link",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/v1/check-tags/": {
      "get": {
        "operationId": "get_servicetaglist",
        "description": "List all tags",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "tag",
                "-tag"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CheckTag"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      },
      "post": {
        "operationId": "post_servicetaglist",
        "description": "Create a new tag",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "$ref": "#/components/schemas/CheckTag"
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      }
    },
    "/api/v1/check-tags/{pk}/": {
      "get": {
        "operationId": "get_service_tag_detail",
        "description": "Get a single tag",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTag"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      },
      "put": {
        "operationId": "put_service_tag_detail",
        "description": "Update a tag",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTag"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      },
      "patch": {
        "operationId": "patch_service_tag_detail",
        "description": "Partially update a tag",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckTag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTag"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      },
      "delete": {
        "operationId": "delete_service_tag_detail",
        "description": "Delete a tag",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "check-tags"
        ]
      }
    },
    "/api/v1/checks/": {
      "get": {
        "operationId": "get_servicelist",
        "description": "List all checks",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "address",
                "-address",
                "name",
                "-name",
                "monitoring_service_type",
                "-monitoring_service_type",
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "monitoring_service_type",
            "required": false,
            "in": "query",
            "description": "Filter by check type.",
            "schema": {
              "type": "string",
              "enum": [
                "HTTP",
                "RUM",
                "RUM2",
                "ICMP",
                "SSH",
                "TCP",
                "UDP",
                "DNS",
                "SMTP",
                "POP",
                "IMAP",
                "NTP",
                "BLACKLIST",
                "WHOIS",
                "MALWARE",
                "SSL_CERT",
                "TRANSACTION",
                "API",
                "HEARTBEAT",
                "WEBHOOK",
                "GROUP",
                "PAGESPEED"
              ]
            }
          },
          {
            "name": "is_paused",
            "required": false,
            "in": "query",
            "description": "Filter by paused status.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_under_maintenance",
            "required": false,
            "in": "query",
            "description": "Filter for checks currently under maintenance.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "state_is_up",
            "required": false,
            "in": "query",
            "description": "Filter by check up/down state.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "has_maintenance_schedule",
            "required": false,
            "in": "query",
            "description": "Filter by checks that have a maintenance schedule.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tag",
            "required": false,
            "in": "query",
            "description": "Filter by tag name (can be specified multiple times.)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Checks"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-api/": {
      "post": {
        "operationId": "post_service_create_api",
        "description": "Create a new API check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksAPI"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksAPI"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksAPI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksAPI"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-blacklist/": {
      "post": {
        "operationId": "post_service_create_blacklist",
        "description": "Create a new Domain Blacklist check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBLACKLIST"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBLACKLIST"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBLACKLIST"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksBLACKLIST"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-dns/": {
      "post": {
        "operationId": "post_service_create_dns",
        "description": "Create a new DNS check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksDNS"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksDNS"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksDNS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksDNS"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-group/": {
      "post": {
        "operationId": "post_service_create_group",
        "description": "Create a new Group check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksGROUP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksGROUP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksGROUP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksGROUP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-heartbeat/": {
      "post": {
        "operationId": "post_service_create_heartbeat",
        "description": "Create a new Heartbeat check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHEARTBEAT"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHEARTBEAT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHEARTBEAT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksHEARTBEAT"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-http/": {
      "post": {
        "operationId": "post_service_create_http",
        "description": "Create a new HTTP(S) check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHTTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHTTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksHTTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "$ref": "#/components/schemas/ChecksHTTP"
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-icmp/": {
      "post": {
        "operationId": "post_service_create_icmp",
        "description": "Create a new ICMP(Ping) check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksICMP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksICMP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksICMP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksICMP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-imap/": {
      "post": {
        "operationId": "post_service_create_imap",
        "description": "Create a new IMAP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksIMAP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksIMAP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksIMAP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksIMAP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-malware/": {
      "post": {
        "operationId": "post_service_create_malware",
        "description": "Create a new Malware/Virus check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksMALWARE"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksMALWARE"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksMALWARE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksMALWARE"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-ntp/": {
      "post": {
        "operationId": "post_service_create_ntp",
        "description": "Create a new NTP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksNTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksNTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksNTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksNTP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-pop/": {
      "post": {
        "operationId": "post_service_create_pop",
        "description": "Create a new POP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksPOP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksPOP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksPOP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksPOP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-rum/": {
      "post": {
        "operationId": "post_service_create_rum",
        "description": "Create a new Real User Monitoring (Legacy) check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksRUM"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-rum2/": {
      "post": {
        "operationId": "post_service_create_rum2",
        "description": "Create a new Real User Monitoring check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM2"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM2"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksRUM2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksRUM2"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-smtp/": {
      "post": {
        "operationId": "post_service_create_smtp",
        "description": "Create a new SMTP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSMTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSMTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSMTP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksSMTP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-ssh/": {
      "post": {
        "operationId": "post_service_create_ssh",
        "description": "Create a new SSH check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSH"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSH"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksSSH"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-ssl-cert/": {
      "post": {
        "operationId": "post_service_create_ssl_cert",
        "description": "Create a new SSL Certificate check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSL_CERT"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSL_CERT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksSSL_CERT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksSSL_CERT"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-tcp/": {
      "post": {
        "operationId": "post_service_create_tcp",
        "description": "Create a new TCP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTCP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTCP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTCP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksTCP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-transaction/": {
      "post": {
        "operationId": "post_service_create_transaction",
        "description": "Create a new Transaction check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTRANSACTION"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTRANSACTION"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksTRANSACTION"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksTRANSACTION"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-udp/": {
      "post": {
        "operationId": "post_service_create_udp",
        "description": "Create a new UDP check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksUDP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksUDP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksUDP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksUDP"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-webhook/": {
      "post": {
        "operationId": "post_service_create_webhook",
        "description": "Create a new Incoming Webhook check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWEBHOOK"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWEBHOOK"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWEBHOOK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksWEBHOOK"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/add-whois/": {
      "post": {
        "operationId": "post_service_create_whois",
        "description": "Create a new Whois/Domain Expiry check",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWHOIS"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWHOIS"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksWHOIS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksWHOIS"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/escalations/": {
      "patch": {
        "operationId": "patch_service_bulk_escalations",
        "description": "Bulk API: Update escalations for multiple checks\n\n**Sample data (JSON):**\n\n    {\n        \"pk\": [1, 2, 3],\n        \"fields\": {\n            \"escalations\": [{\n                \"wait_time\": 5,\n                \"contact_groups\": [\"Default\", \"Other\"]\n            }]\n        }\n    }",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateEscalations"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateEscalations"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateEscalations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksBulkUpdateEscalations"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/maintenance/": {
      "patch": {
        "operationId": "patch_service_bulk_maintenance",
        "description": "Bulk API: Update maintenance settings for multiple checks\n\n**Sample data (JSON):**\n\n    {\n        \"pk\": [1, 2, 3],\n        \"fields\": {\n            \"state\": \"SCHEDULED\",\n            \"schedule\": [{\n                \"type\": \"WEEKLY\",\n                \"from_time\": \"03:15\",\n                \"to_time\": \"18:30\",\n                \"weekdays\": [6, 0]\n            }]\n        }\n    }",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateMaintenance"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateMaintenance"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdateMaintenance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksBulkUpdateMaintenance"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/pause/": {
      "patch": {
        "operationId": "patch_service_bulk_pause",
        "description": "Bulk API: Pause multiple checks\n\n**Sample data (JSON):**\n\n    {\n        \"pk\": [1, 2, 3]\n    }",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkChecksAction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/resume/": {
      "patch": {
        "operationId": "patch_service_bulk_resume",
        "description": "Bulk API: Resume multiple checks\n\n**Sample data (JSON):**\n\n    {\n        \"pk\": [1, 2, 3]\n    }",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkChecksAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkChecksAction"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/stats/": {
      "get": {
        "operationId": "get_service_bulk_stats",
        "description": "Bulk API: Get statistics & response time for multiple checks",
        "parameters": [
          {
            "name": "pk",
            "in": "query",
            "required": true,
            "description": "",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_alerts",
            "in": "query",
            "required": false,
            "description": "Include alert data for each outage in the period.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksBulkStats"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/bulk/update/": {
      "patch": {
        "operationId": "patch_service_bulk_update",
        "description": "Bulk API: Update multiple checks\n\n**Sample data (JSON):**\n\n    {\n        \"pk\": [1, 2, 3],\n        \"fields\": {\n            \"msp_interval\": 10,\n            \"msp_sensitivity\": 3,\n            \"contact_groups\": [\"Default\", \"Other\"],\n            \"locations\": [\"GBR\", \"AUT\"],\n            \"tags\": [\"One\", \"Two\"],\n            ...\n        }\n    }",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChecksBulkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecksBulkUpdate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/check-definitions/": {
      "get": {
        "operationId": "get_service_show_service_defs",
        "description": "Lists the parameters available for every type of check",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/locations/": {
      "get": {
        "operationId": "get_service_show_locations",
        "description": "Lists all locations available for checks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/": {
      "get": {
        "operationId": "get_service_detail",
        "description": "Get a single check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checks"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      },
      "put": {
        "operationId": "put_service_detail",
        "description": "Update a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checks"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      },
      "patch": {
        "operationId": "patch_service_detail",
        "description": "Partially update a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Checks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checks"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      },
      "delete": {
        "operationId": "delete_service_detail",
        "description": "Delete a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/add-contact-groups/": {
      "patch": {
        "operationId": "patch_service_add_contact_groups",
        "description": "Add additional contacts to a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>contact_groups[0]=Default&contact_groups[1]=Other</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"contact_groups\": [\"Default\", \"Other\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckContactGroups"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/add-locations/": {
      "patch": {
        "operationId": "patch_service_add_locations",
        "description": "Add additional locations to a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>locations[0]=GBR&locations[1]=AUT</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"locations\": [\"GBR\", \"AUT\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckLocations"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/add-tags/": {
      "patch": {
        "operationId": "patch_service_add_tags",
        "description": "Add additional tags to a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>tags[0]=One&tags[1]=Two</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"tags\": [\"One\", \"Two\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTags"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/analysis/": {
      "get": {
        "operationId": "get_service_analysis",
        "description": "Shows the real-time analysis data - location status and recent alerts per location",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/current-status/": {
      "get": {
        "operationId": "get_service_current_status",
        "description": "Shows the current check state and latest downtime event for a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/escalations/": {
      "patch": {
        "operationId": "patch_service_set_escalations",
        "description": "Set escalations for a check\n\n**Sample data (JSON):**\n\n    {\n        \"escalations\": [{\n            \"wait_time\": 5,\n            \"contact_groups\": [\"Default\", \"Other\"]\n        }]\n    }\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckEscalations"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckEscalations"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckEscalations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckEscalations"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/maintenance/": {
      "patch": {
        "operationId": "patch_service_set_maintenance",
        "description": "Set maintenance windows for a check\n\n**Sample data (JSON):**\n\n    # Set under maintenance now\n    {\n        \"state\": \"SUPPRESSED\"\n    }\n\n    # Turn off maintenance\n    {\n        \"state\": \"ACTIVE\"\n    }\n\n    # Set weekly scheduled maintenance\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"WEEKLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"weekdays\": [6, 0]\n        }]\n    }\n\n    # Set monthly scheduled maintenance\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"MONTHLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"monthday\": 7\n        }]\n    }\n\n    or\n\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"MONTHLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"monthday_from\": 7,\n            \"monthday_to\": 9\n        }]\n    }",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckMaintenance"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckMaintenance"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckMaintenance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckMaintenance"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/pause/": {
      "post": {
        "operationId": "post_service_pause",
        "description": "Pause a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/replace-contact-groups/": {
      "patch": {
        "operationId": "patch_service_replace_contact_groups",
        "description": "Replace all contacts on a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>contact_groups[0]=Default&contact_groups[1]=Other</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"contact_groups\": [\"Default\", \"Other\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckContactGroups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckContactGroups"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/replace-locations/": {
      "patch": {
        "operationId": "patch_service_replace_locations",
        "description": "Replace all locations on a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>locations[0]=GBR&locations[1]=AUT</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"locations\": [\"GBR\", \"AUT\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckLocations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckLocations"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/replace-tags/": {
      "patch": {
        "operationId": "patch_service_replace_tags",
        "description": "Replace all tags on a check\n\n**Sample data (application/x-www-form-urlencoded):**\n\n<pre>tags[0]=One&tags[1]=Two</pre>\n\n<br />\n**Sample data (JSON):**\n\n    {\"tags\": [\"One\", \"Two\"]}\n\n<br />",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CheckTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckTags"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/response-time/": {
      "get": {
        "operationId": "get_service_response_time_datapoints",
        "description": "Returns raw response time data for a check for all locations.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTime"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/resume/": {
      "post": {
        "operationId": "post_service_resume",
        "description": "Resume a check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/checks/{pk}/stats/": {
      "get": {
        "operationId": "get_service_stats",
        "description": "Shows uptime and response time statistics for this check",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "description": "Show response time for specified location only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locations_response_times",
            "in": "query",
            "required": false,
            "description": "Include response time datapoints for all locations.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_alerts",
            "in": "query",
            "required": false,
            "description": "Include alert data for each outage in the period.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "download",
            "in": "query",
            "required": false,
            "description": "Set this paramater to download an XLS containing the stats.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pdf",
            "in": "query",
            "required": false,
            "description": "Set this paramater to download a PDF report.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckStats"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "checks"
        ]
      }
    },
    "/api/v1/contacts/": {
      "get": {
        "operationId": "get_contactgrouplist",
        "description": "List all contacts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "has_on_call_schedule",
            "required": false,
            "in": "query",
            "description": "Filter by contacts that have on-call schedules defined.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContactGroup"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "post": {
        "operationId": "post_contactgrouplist",
        "description": "Create a new contact",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroup"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/v1/contacts/{pk}/": {
      "get": {
        "operationId": "get_contact_group_detail",
        "description": "Get a single contact",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroup"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "put": {
        "operationId": "put_contact_group_detail",
        "description": "Update a contact",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroup"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "patch": {
        "operationId": "patch_contact_group_detail",
        "description": "Partially update a contact",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroup"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      },
      "delete": {
        "operationId": "delete_contact_group_detail",
        "description": "Delete a contact",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/v1/contacts/{pk}/oncall/": {
      "patch": {
        "operationId": "patch_contact_group_set_on_call_hours",
        "description": "Set the on-call schedule for a contact.\n\n**Sample data (JSON):**\n\n    # Set always on-call\n    {\n        \"state\": \"ACTIVE\"\n    }\n\n    # Set weekly on-call schedule\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"WEEKLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"weekdays\": [6, 0]\n        }]\n    }\n\n    # Set monthly schedule\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"MONTHLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"monthday\": 7\n        }]\n    }\n\n    or\n\n    {\n        \"state\": \"SCHEDULED\",\n        \"schedule\": [{\n            \"type\": \"MONTHLY\",\n            \"from_time\": \"03:15\",\n            \"to_time\": \"18:30\",\n            \"monthday_from\": 7,\n            \"monthday_to\": 9\n        }]\n    }",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupOnCallSchedule"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupOnCallSchedule"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupOnCallSchedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupOnCallSchedule"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "contacts"
        ]
      }
    },
    "/api/v1/dashboards/": {
      "get": {
        "operationId": "get_dashboardlist",
        "description": "List all dashboards",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "ordering",
                "-ordering"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Dashboard"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "post": {
        "operationId": "post_dashboardlist",
        "description": "Create a new dashboard",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/api/v1/dashboards/default/": {
      "get": {
        "operationId": "get_dashboard_default",
        "description": "Shows the default dashboard defined by the system",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/api/v1/dashboards/{pk}/": {
      "get": {
        "operationId": "get_dashboard_detail",
        "description": "Get a single dashboard definition",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "put": {
        "operationId": "put_dashboard_detail",
        "description": "Update a dashboard definition",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "patch": {
        "operationId": "patch_dashboard_detail",
        "description": "Partially update a dashboard definition",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Dashboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      },
      "delete": {
        "operationId": "delete_dashboard_detail",
        "description": "Delete a dashboard definition",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/api/v1/dashboards/{pk}/stats/": {
      "get": {
        "operationId": "get_dashboard_stats",
        "description": "Shows the real-time statistics for this dashboard.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardStats"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "dashboards"
        ]
      }
    },
    "/api/v1/integrations/": {
      "get": {
        "operationId": "get_integrationlist",
        "description": "List all integrations",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "module",
                "-module"
              ]
            }
          },
          {
            "name": "module",
            "required": false,
            "in": "query",
            "description": "Filter by integration provider.",
            "schema": {
              "type": "string",
              "enum": [
                "cachet",
                "webhook",
                "datadog",
                "geckoboard",
                "jiraservicedesk",
                "klipfolio",
                "librato",
                "microsoft_teams",
                "opsgenie",
                "pagerduty",
                "pushbullet",
                "pushover",
                "signifai",
                "slack",
                "victorops",
                "status",
                "statuspage",
                "twitter",
                "wavefront",
                "zapier"
              ]
            }
          },
          {
            "name": "is_errored",
            "required": false,
            "in": "query",
            "description": "Filter by whether this integration has stopped due to errors.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integration"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-cachet/": {
      "post": {
        "operationId": "post_integration_create_cachet",
        "description": "Create a new Cachet integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationCachet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationCachet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationCachet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCachet"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-datadog/": {
      "post": {
        "operationId": "post_integration_create_datadog",
        "description": "Create a new Datadog integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDatadog"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDatadog"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDatadog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDatadog"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-geckoboard/": {
      "post": {
        "operationId": "post_integration_create_geckoboard",
        "description": "Create a new Geckoboard integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGeckoboard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGeckoboard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGeckoboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationGeckoboard"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-jiraservicedesk/": {
      "post": {
        "operationId": "post_integration_create_jiraservicedesk",
        "description": "Create a new Jira Service Desk integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationJiraservicedesk"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationJiraservicedesk"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationJiraservicedesk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationJiraservicedesk"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-klipfolio/": {
      "post": {
        "operationId": "post_integration_create_klipfolio",
        "description": "Create a new Klipfolio integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationKlipfolio"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationKlipfolio"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationKlipfolio"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationKlipfolio"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-librato/": {
      "post": {
        "operationId": "post_integration_create_librato",
        "description": "Create a new Librato integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationLibrato"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationLibrato"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationLibrato"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationLibrato"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-microsoft-teams/": {
      "post": {
        "operationId": "post_integration_create_microsoft_teams",
        "description": "Create a new Microsoft Teams integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationMicrosoft_Teams"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationMicrosoft_Teams"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationMicrosoft_Teams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationMicrosoft_Teams"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-opsgenie/": {
      "post": {
        "operationId": "post_integration_create_opsgenie",
        "description": "Create a new OpsGenie integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationOpsgenie"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationOpsgenie"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationOpsgenie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationOpsgenie"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-pagerduty/": {
      "post": {
        "operationId": "post_integration_create_pagerduty",
        "description": "Create a new PagerDuty integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPagerduty"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPagerduty"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPagerduty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPagerduty"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-pushbullet/": {
      "post": {
        "operationId": "post_integration_create_pushbullet",
        "description": "Create a new Pushbullet integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushbullet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushbullet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushbullet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPushbullet"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-pushover/": {
      "post": {
        "operationId": "post_integration_create_pushover",
        "description": "Create a new Pushover integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushover"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushover"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPushover"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPushover"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-signifai/": {
      "post": {
        "operationId": "post_integration_create_signifai",
        "description": "Create a new SignifAI integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSignifai"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSignifai"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSignifai"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationSignifai"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-slack/": {
      "post": {
        "operationId": "post_integration_create_slack",
        "description": "Create a new Slack integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSlack"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSlack"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSlack"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationSlack"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-status/": {
      "post": {
        "operationId": "post_integration_create_status",
        "description": "Create a new Status.io integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatus"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatus"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationStatus"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-statuspage/": {
      "post": {
        "operationId": "post_integration_create_statuspage",
        "description": "Create a new StatusPage.io integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatuspage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatuspage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatuspage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationStatuspage"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-twitter/": {
      "post": {
        "operationId": "post_integration_create_twitter",
        "description": "Create a new Twitter integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationTwitter"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationTwitter"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationTwitter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTwitter"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-victorops/": {
      "post": {
        "operationId": "post_integration_create_victorops",
        "description": "Create a new Splunk On-Call integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationVictorops"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationVictorops"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationVictorops"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationVictorops"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-wavefront/": {
      "post": {
        "operationId": "post_integration_create_wavefront",
        "description": "Create a new Wavefront integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWavefront"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWavefront"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWavefront"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationWavefront"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-webhook/": {
      "post": {
        "operationId": "post_integration_create_webhook",
        "description": "Create a new Custom Postback URL (Webhook) integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationWebhook"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/add-zapier/": {
      "post": {
        "operationId": "post_integration_create_zapier",
        "description": "Create a new Zapier integration",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationZapier"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationZapier"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationZapier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationZapier"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/integrations/{pk}/": {
      "get": {
        "operationId": "get_integration_detail",
        "description": "Get a single integration",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      },
      "put": {
        "operationId": "put_integration_detail",
        "description": "Update an integration\n\nSee the various POST methods for additional fields available for each integration type.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      },
      "patch": {
        "operationId": "patch_integration_detail",
        "description": "Partially update an integration\n\nSee the various POST methods for additional fields available for each integration type.",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      },
      "delete": {
        "operationId": "delete_integration_detail",
        "description": "Delete an integration",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "integrations"
        ]
      }
    },
    "/api/v1/outages/": {
      "get": {
        "operationId": "get_outagelist",
        "description": "List all outages",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "check_pk",
            "required": false,
            "in": "query",
            "description": "Filter by check ID.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "check_monitoring_service_type",
            "required": false,
            "in": "query",
            "description": "Filter by check type.",
            "schema": {
              "type": "string",
              "enum": [
                "HTTP",
                "RUM",
                "RUM2",
                "ICMP",
                "SSH",
                "TCP",
                "UDP",
                "DNS",
                "SMTP",
                "POP",
                "IMAP",
                "NTP",
                "BLACKLIST",
                "WHOIS",
                "MALWARE",
                "SSL_CERT",
                "TRANSACTION",
                "API",
                "HEARTBEAT",
                "WEBHOOK",
                "GROUP",
                "PAGESPEED"
              ]
            }
          },
          {
            "name": "check_tag",
            "required": false,
            "in": "query",
            "description": "Filter by tag name (can be specified multiple times.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "Start date in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "End date in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ongoing",
            "required": false,
            "in": "query",
            "description": "Whether the outage is ongoing (true) or resolved (false).",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Outages"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "outages"
        ]
      }
    },
    "/api/v1/outages/{pk}/": {
      "get": {
        "operationId": "get_outage_detail",
        "description": "Get the details of a single outage",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outages"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "outages"
        ]
      }
    },
    "/api/v1/probe-servers/": {
      "get": {
        "operationId": "get_monitoring_server_list",
        "description": "List all probe servers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "probe-servers"
        ]
      }
    },
    "/api/v1/push-notifications/": {
      "get": {
        "operationId": "get_pushnotificationlist",
        "description": "List all registered push notification devices\nand the associated contacts that push alerts to them",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "display_name",
                "-display_name",
                "created_at",
                "-created_at"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PushNotificationProfileCreate"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      },
      "post": {
        "operationId": "post_pushnotificationlist",
        "description": "Register a new device for push notifications\n\n**NOTE: This API is only available to the Uptime.com mobile app.**\nRegister your device via the mobile app and it will automatically appear\nin the list.\n\n**NOTE 2:** This endpoint will overwrite any existing registered\ndevice with the same UUID, if it exists.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfileCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfileCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfileCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationProfileCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      }
    },
    "/api/v1/push-notifications/{pk}/": {
      "get": {
        "operationId": "get_push_notification_detail",
        "description": "Get a single registered push notification device\n\n**NOTE** You may identify the object by PK or UUID",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "You may specify a `pk` or `uuid`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      },
      "put": {
        "operationId": "put_push_notification_detail",
        "description": "Update the device name and associated contacts for a push notification device\n\n**NOTE** You may identify the object by PK or UUID",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "You may specify a `pk` or `uuid`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      },
      "patch": {
        "operationId": "patch_push_notification_detail",
        "description": "Partially update the device name or associated contacts for a push notification device\n\n**NOTE** You may identify the object by PK or UUID",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "You may specify a `pk` or `uuid`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      },
      "delete": {
        "operationId": "delete_push_notification_detail",
        "description": "Delete a registered push notification device\n\n**NOTE** You may identify the object by PK or UUID",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "You may specify a `pk` or `uuid`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "push-notifications"
        ]
      }
    },
    "/api/v1/scheduled-reports/": {
      "get": {
        "operationId": "get_scheduledreportlist",
        "description": "List all scheduled reports",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "created_at",
                "-created_at"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ScheduledReport"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      },
      "post": {
        "operationId": "post_scheduledreportlist",
        "description": "Create a new scheduled report",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      }
    },
    "/api/v1/scheduled-reports/{pk}/": {
      "get": {
        "operationId": "get_scheduled_report_detail",
        "description": "Get a single scheduled report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      },
      "put": {
        "operationId": "put_scheduled_report_detail",
        "description": "Update a scheduled report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      },
      "patch": {
        "operationId": "patch_scheduled_report_detail",
        "description": "Partially update a scheduled report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      },
      "delete": {
        "operationId": "delete_scheduled_report_detail",
        "description": "Delete a scheduled report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "scheduled-reports"
        ]
      }
    },
    "/api/v1/sla-reports/": {
      "get": {
        "operationId": "get_slareportlist",
        "description": "List all SLA reports",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "created_at",
                "-created_at"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SLAReport"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      },
      "post": {
        "operationId": "post_slareportlist",
        "description": "Create a new SLA report",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      }
    },
    "/api/v1/sla-reports/{pk}/": {
      "get": {
        "operationId": "get_sla_report_detail",
        "description": "Get a single SLA report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      },
      "put": {
        "operationId": "put_sla_report_detail",
        "description": "Update an SLA report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      },
      "patch": {
        "operationId": "patch_sla_report_detail",
        "description": "Partially update an SLA report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SLAReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAReport"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      },
      "delete": {
        "operationId": "delete_sla_report_detail",
        "description": "Delete an SLA report",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      }
    },
    "/api/v1/sla-reports/{pk}/stats/": {
      "get": {
        "operationId": "get_sla_report_stats",
        "description": "Generates the report for the specified time period",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "output",
            "in": "query",
            "required": false,
            "description": "The output format of the report: [json, pdf, xls]",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "pdf",
                "xls"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLAReportStats"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "sla-reports"
        ]
      }
    },
    "/api/v1/statuspages/": {
      "get": {
        "operationId": "get_statuspagelist",
        "description": "List all status pages",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "name",
                "-name",
                "slug",
                "-slug",
                "cname",
                "-cname"
              ]
            }
          },
          {
            "name": "is_public",
            "required": false,
            "in": "query",
            "description": "Filter by whether this status page is public.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusPage"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "post": {
        "operationId": "post_statuspagelist",
        "description": "Create new status page",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPage"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{pk}/": {
      "get": {
        "operationId": "get_statuspage_detail",
        "description": "Get a single status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPage"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "put": {
        "operationId": "put_statuspage_detail",
        "description": "Update a status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPage"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "patch": {
        "operationId": "patch_statuspage_detail",
        "description": "Partially update a status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StatusPage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPage"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "delete": {
        "operationId": "delete_statuspage_detail",
        "description": "Delete a status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{pk}/current-status/": {
      "get": {
        "operationId": "get_statuspage_current_status",
        "description": "Get current status of a status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPageCurrentStatus"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{pk}/history/": {
      "get": {
        "operationId": "get_statuspage_history",
        "description": "Get history of a status page",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "Start date in ISO 8601 (YYYY-MM-DD) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "End date in ISO 8601 (YYYY-MM-DD) format.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPageHistory"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/components/": {
      "get": {
        "operationId": "get_componentslist",
        "description": "List all status page components",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "required": false,
            "in": "query",
            "description": "Filter by whether this component belongs to group with this ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is_group",
            "required": false,
            "in": "query",
            "description": "Filter by whether this component is a group",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Component"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "post": {
        "operationId": "post_componentslist",
        "description": "Create a new status page component",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/components/{pk}/": {
      "get": {
        "operationId": "get_component_detail",
        "description": "Get a single status page component",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "put": {
        "operationId": "put_component_detail",
        "description": "Update a status page component",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "patch": {
        "operationId": "patch_component_detail",
        "description": "Partially update a status page component",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "delete": {
        "operationId": "delete_component_detail",
        "description": "Delete a status page component",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/incidents/": {
      "get": {
        "operationId": "get_incidentlist",
        "description": "List all status page incidents",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "incident_type",
            "required": false,
            "in": "query",
            "description": "Filter by incident type",
            "schema": {
              "type": "string",
              "enum": [
                "INCIDENT",
                "SCHEDULED_MAINTENANCE"
              ]
            }
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "Start date in ISO 8601 (YYYY-MM-DD) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "Start date in ISO 8601 (YYYY-MM-DD) format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "starts_at",
                "-starts_at"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Incident"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "post": {
        "operationId": "post_incidentlist",
        "description": "Create a new status page incident",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/incidents/{pk}/": {
      "get": {
        "operationId": "get_incident_detail",
        "description": "Get a single status page incident",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "put": {
        "operationId": "put_incident_detail",
        "description": "Update a single status page incident",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "patch": {
        "operationId": "patch_incident_detail",
        "description": "Partially a single status page incident",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "delete": {
        "operationId": "delete_incident_detail",
        "description": "Delete a single status page incident",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/metrics/": {
      "get": {
        "operationId": "get_metricslist",
        "description": "List all status page metrics",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_visible",
            "required": false,
            "in": "query",
            "description": "Filter by whether this metric is visible to Status Page visitors",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Metric"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "post": {
        "operationId": "post_metricslist",
        "description": "Create a new status page metric",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/statuspages/{statuspage_id}/metrics/{pk}/": {
      "get": {
        "operationId": "get_metric_detail",
        "description": "Get a single status page metric",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "put": {
        "operationId": "put_metric_detail",
        "description": "Update a status page metric",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "patch": {
        "operationId": "patch_metric_detail",
        "description": "Partially update a status page metric",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Metric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      },
      "delete": {
        "operationId": "delete_metric_detail",
        "description": "Delete a status page metric",
        "parameters": [
          {
            "name": "statuspage_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "statuspages"
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "operationId": "get_userlist",
        "description": "List all users",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Order results by this field.",
            "schema": {
              "type": "string",
              "enum": [
                "pk",
                "-pk",
                "last_name",
                "-last_name",
                "first_name",
                "-first_name",
                "email",
                "-email"
              ]
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filter by email address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_level",
            "required": false,
            "in": "query",
            "description": "Filter by access level.",
            "schema": {
              "type": "string",
              "enum": [
                "10-READ",
                "30-WRITE",
                "50-ADMIN"
              ]
            }
          },
          {
            "name": "subaccount",
            "required": false,
            "in": "query",
            "description": "Filter by users that have access to this subaccount ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "Filter by whether the user is active.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_api_enabled",
            "required": false,
            "in": "query",
            "description": "Filter by whether the API is enabled for this user.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "notify_paid_invoices",
            "required": false,
            "in": "query",
            "description": "Filter by whether invoices are sent to this user.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "post_userlist",
        "description": "Create a new user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{pk}/": {
      "get": {
        "operationId": "get_user_detail",
        "description": "Get a single user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "put_user_detail",
        "description": "Update a user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "patch_user_detail",
        "description": "Partially update a user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "delete_user_detail",
        "description": "Permanently delete a user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{pk}/deactivate/": {
      "post": {
        "operationId": "post_user_deactivate",
        "description": "Deactivate a user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/v1/users/{pk}/reactivate/": {
      "post": {
        "operationId": "post_user_reactivate",
        "description": "Reactivate a user",
        "parameters": [
          {
            "name": "pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthTokenWithTOTP": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Enter your two-factor authentication (2FA) code from your authenticator."
          },
          "email": {
            "type": "string",
            "writeOnly": true,
            "description": "Email address for login."
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "BulkChecksAction": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "writeOnly": true,
            "maxItems": 250
          }
        },
        "required": [
          "pk"
        ]
      },
      "CheckContactGroups": {
        "type": "object",
        "properties": {
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "description": "An array of contact group names or IDs to set on this check"
          }
        },
        "required": [
          "contact_groups"
        ]
      },
      "CheckEscalations": {
        "type": "object",
        "properties": {
          "escalations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "wait_time": {
                  "type": "integer",
                  "maximum": 6000,
                  "minimum": 1
                },
                "contact_groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "wait_time",
                "contact_groups"
              ]
            },
            "writeOnly": true,
            "description": "A list of escalations to set on this check; see example above."
          }
        },
        "required": [
          "escalations"
        ]
      },
      "CheckLocations": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "description": "An array of location names to add to this check"
          }
        },
        "required": [
          "locations"
        ]
      },
      "CheckMaintenance": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "ACTIVE",
              "SUPPRESSED",
              "SCHEDULED"
            ],
            "type": "string",
            "writeOnly": true,
            "description": "Current state of the check; ACTIVE (alerts sent normally), SUPPRESSED (under maintenance), SCHEDULED (maintenance windows as defined in the schedule)"
          },
          "schedule": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "weekdays": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "monthday": {
                  "type": "integer"
                },
                "type": {
                  "enum": [
                    "WEEKLY",
                    "MONTHLY"
                  ],
                  "type": "string"
                },
                "from_time": {
                  "type": "string"
                },
                "to_time": {
                  "type": "string"
                },
                "monthday_from": {
                  "type": "integer",
                  "maximum": 31,
                  "minimum": 0
                },
                "monthday_to": {
                  "type": "integer",
                  "maximum": 31,
                  "minimum": 0
                }
              },
              "required": [
                "type",
                "from_time",
                "to_time"
              ]
            },
            "writeOnly": true,
            "default": [],
            "description": "The schedule entries for maintenance windows; see example above."
          }
        },
        "required": [
          "state"
        ]
      },
      "CheckStats": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "location": {
            "type": "string",
            "description": "Show response time for specified location only."
          },
          "locations_response_times": {
            "type": "boolean",
            "writeOnly": true,
            "description": "Include response time datapoints for all locations."
          },
          "include_alerts": {
            "type": "boolean",
            "writeOnly": true,
            "description": "Include alert data for each outage in the period."
          },
          "download": {
            "type": "boolean",
            "writeOnly": true,
            "description": "Set this paramater to download an XLS containing the stats."
          },
          "pdf": {
            "type": "boolean",
            "writeOnly": true,
            "description": "Set this paramater to download a PDF report."
          },
          "available_locations": {
            "type": "array",
            "items": {},
            "readOnly": true
          },
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "statistics": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "readOnly": true
          },
          "totals": {
            "type": "object",
            "readOnly": true
          }
        }
      },
      "CheckTag": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "description": "The name of this tag",
            "maxLength": 100
          },
          "color_hex": {
            "type": "string",
            "description": "The CSS color code of the tag, eg. #334455"
          }
        },
        "required": [
          "tag",
          "color_hex"
        ]
      },
      "CheckTags": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "description": "An array of tags names or IDs to set on this check"
          }
        },
        "required": [
          "tags"
        ]
      },
      "Checks": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_protocol": {
            "enum": [
              "http",
              "smtp",
              "pop3",
              "imap",
              "ftp",
              "xmpp",
              "irc",
              "ldap"
            ],
            "type": "string"
          },
          "msp_username": {
            "type": "string",
            "maxLength": 255
          },
          "msp_password": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 255
          },
          "msp_proxy": {
            "type": "string",
            "maxLength": 255
          },
          "msp_dns_server": {
            "type": "string",
            "maxLength": 255
          },
          "msp_dns_record_type": {
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "TXT",
              "ANY"
            ],
            "type": "string"
          },
          "msp_status_code": {
            "type": "string",
            "maxLength": 255
          },
          "msp_send_string": {
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_expect_string_type": {
            "enum": [
              "STRING",
              "REGEX",
              "INVERSE_REGEX"
            ],
            "type": "string"
          },
          "msp_encryption": {
            "enum": [
              "",
              "SSL_TLS"
            ],
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0
          },
          "msp_headers": {
            "type": "string"
          },
          "msp_script": {
            "type": "string"
          },
          "msp_version": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string"
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean"
          }
        },
        "required": [
          "contact_groups",
          "msp_address"
        ]
      },
      "ChecksAPI": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "default": 30,
            "minimum": 0
          },
          "msp_script": {
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 4.0
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address",
          "msp_script"
        ]
      },
      "ChecksBLACKLIST": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          }
        },
        "required": [
          "contact_groups",
          "msp_address"
        ]
      },
      "ChecksBulkStats": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "writeOnly": true,
            "maxItems": 250
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "include_alerts": {
            "type": "boolean",
            "writeOnly": true,
            "description": "Include alert data for each outage in the period."
          },
          "checks": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "readOnly": true
          },
          "totals": {
            "type": "object",
            "readOnly": true
          }
        },
        "required": [
          "pk"
        ]
      },
      "ChecksBulkUpdate": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "writeOnly": true,
            "maxItems": 250
          },
          "fields": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "readOnly": true
              },
              "stats_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "alerts_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "cached_response_time": {
                "type": "number",
                "readOnly": true
              },
              "contact_groups": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of contact names or IDs associated with this check"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of locations associated with this check"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of tag names or IDs associated with this check"
              },
              "check_type": {
                "type": "string",
                "readOnly": true
              },
              "escalations": {
                "type": "string",
                "readOnly": true
              },
              "maintenance": {
                "type": "string",
                "readOnly": true
              },
              "monitoring_service_type": {
                "type": "string",
                "readOnly": true
              },
              "is_paused": {
                "type": "boolean"
              },
              "is_under_maintenance": {
                "type": "boolean",
                "readOnly": true
              },
              "state_is_up": {
                "type": "boolean",
                "readOnly": true
              },
              "state_changed_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "msp_interval": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              "msp_address": {
                "type": "string"
              },
              "msp_port": {
                "type": "integer",
                "maximum": 65535,
                "minimum": 1,
                "nullable": true
              },
              "msp_protocol": {
                "enum": [
                  "http",
                  "smtp",
                  "pop3",
                  "imap",
                  "ftp",
                  "xmpp",
                  "irc",
                  "ldap"
                ],
                "type": "string"
              },
              "msp_username": {
                "type": "string",
                "maxLength": 255
              },
              "msp_password": {
                "type": "string",
                "writeOnly": true,
                "maxLength": 255
              },
              "msp_proxy": {
                "type": "string",
                "maxLength": 255
              },
              "msp_dns_server": {
                "type": "string",
                "maxLength": 255
              },
              "msp_dns_record_type": {
                "enum": [
                  "A",
                  "AAAA",
                  "CNAME",
                  "MX",
                  "NS",
                  "PTR",
                  "SOA",
                  "TXT",
                  "ANY"
                ],
                "type": "string"
              },
              "msp_status_code": {
                "type": "string",
                "maxLength": 255
              },
              "msp_send_string": {
                "type": "string"
              },
              "msp_expect_string": {
                "type": "string"
              },
              "msp_expect_string_type": {
                "enum": [
                  "STRING",
                  "REGEX",
                  "INVERSE_REGEX"
                ],
                "type": "string"
              },
              "msp_encryption": {
                "enum": [
                  "",
                  "SSL_TLS"
                ],
                "type": "string"
              },
              "msp_threshold": {
                "type": "integer",
                "maximum": 2147483647,
                "nullable": true,
                "minimum": 0
              },
              "msp_headers": {
                "type": "string"
              },
              "msp_script": {
                "type": "string"
              },
              "msp_version": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              "msp_sensitivity": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              "msp_num_retries": {
                "type": "integer",
                "maximum": 3,
                "minimum": 1
              },
              "msp_use_ip_version": {
                "enum": [
                  "",
                  "IPV4",
                  "IPV6"
                ],
                "type": "string"
              },
              "msp_uptime_sla": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 0.0001,
                "maximum": 1.0,
                "minimum": 0.0
              },
              "msp_response_time_sla": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 60.0,
                "minimum": 0.0,
                "nullable": true
              },
              "msp_notes": {
                "type": "string"
              },
              "msp_include_in_global_metrics": {
                "type": "boolean"
              }
            },
            "required": [
              "contact_groups",
              "msp_address"
            ],
            "writeOnly": true
          }
        },
        "required": [
          "pk",
          "fields"
        ]
      },
      "ChecksBulkUpdateEscalations": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "writeOnly": true,
            "maxItems": 250
          },
          "fields": {
            "type": "object",
            "properties": {
              "escalations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "wait_time": {
                      "type": "integer",
                      "maximum": 6000,
                      "minimum": 1
                    },
                    "contact_groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "wait_time",
                    "contact_groups"
                  ]
                },
                "writeOnly": true,
                "description": "A list of escalations to set on this check; see example above."
              }
            },
            "required": [
              "escalations"
            ],
            "writeOnly": true
          }
        },
        "required": [
          "pk",
          "fields"
        ]
      },
      "ChecksBulkUpdateMaintenance": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "writeOnly": true,
            "maxItems": 250
          },
          "fields": {
            "type": "object",
            "properties": {
              "state": {
                "enum": [
                  "ACTIVE",
                  "SUPPRESSED",
                  "SCHEDULED"
                ],
                "type": "string",
                "writeOnly": true,
                "description": "Current state of the check; ACTIVE (alerts sent normally), SUPPRESSED (under maintenance), SCHEDULED (maintenance windows as defined in the schedule)"
              },
              "schedule": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true
                    },
                    "weekdays": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "monthday": {
                      "type": "integer"
                    },
                    "type": {
                      "enum": [
                        "WEEKLY",
                        "MONTHLY"
                      ],
                      "type": "string"
                    },
                    "from_time": {
                      "type": "string"
                    },
                    "to_time": {
                      "type": "string"
                    },
                    "monthday_from": {
                      "type": "integer",
                      "maximum": 31,
                      "minimum": 0
                    },
                    "monthday_to": {
                      "type": "integer",
                      "maximum": 31,
                      "minimum": 0
                    }
                  },
                  "required": [
                    "type",
                    "from_time",
                    "to_time"
                  ]
                },
                "writeOnly": true,
                "default": [],
                "description": "The schedule entries for maintenance windows; see example above."
              }
            },
            "required": [
              "state"
            ],
            "writeOnly": true
          }
        },
        "required": [
          "pk",
          "fields"
        ]
      },
      "ChecksDNS": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_dns_server": {
            "type": "string",
            "maxLength": 255
          },
          "msp_dns_record_type": {
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "NS",
              "PTR",
              "SOA",
              "TXT",
              "ANY"
            ],
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "default": 20,
            "minimum": 0
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address",
          "msp_dns_record_type"
        ]
      },
      "ChecksGROUP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          },
          "groupcheckconfig": {
            "type": "object",
            "properties": {
              "group_check_services": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Include checks from this list"
              },
              "group_check_tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Include checks with one or more of the selected tags"
              },
              "group_check_down_condition": {
                "enum": [
                  "ANY",
                  "TWO",
                  "THREE",
                  "FOUR",
                  "FIVE",
                  "TEN",
                  "ONE_PCT",
                  "THREE_PCT",
                  "FIVE_PCT",
                  "TEN_PCT",
                  "TWENTYFIVE_PCT",
                  "FIFTY_PCT",
                  "ALL"
                ],
                "type": "string"
              },
              "group_uptime_percent_calculation": {
                "enum": [
                  "UP_DOWN_STATES",
                  "AVERAGE"
                ],
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "required": [
          "contact_groups"
        ]
      },
      "ChecksHEARTBEAT": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          },
          "heartbeat_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval"
        ]
      },
      "ChecksHTTP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_username": {
            "type": "string",
            "maxLength": 255
          },
          "msp_password": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 255
          },
          "msp_proxy": {
            "type": "string",
            "maxLength": 255
          },
          "msp_status_code": {
            "type": "string",
            "maxLength": 255
          },
          "msp_send_string": {
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_expect_string_type": {
            "enum": [
              "STRING",
              "REGEX",
              "INVERSE_REGEX"
            ],
            "type": "string"
          },
          "msp_encryption": {
            "enum": [
              "",
              "SSL_TLS"
            ],
            "type": "string",
            "default": "SSL_TLS"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "default": 40,
            "minimum": 0
          },
          "msp_headers": {
            "type": "string"
          },
          "msp_version": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksICMP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 1.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksIMAP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_encryption": {
            "enum": [
              "",
              "SSL_TLS"
            ],
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksMALWARE": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          }
        },
        "required": [
          "contact_groups",
          "msp_address"
        ]
      },
      "ChecksNTP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "default": 20,
            "minimum": 0
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 1.0
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksPOP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_encryption": {
            "enum": [
              "",
              "SSL_TLS"
            ],
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksRUM": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0,
            "default": 10
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_address",
          "msp_threshold"
        ]
      },
      "ChecksRUM2": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_address"
        ]
      },
      "ChecksSMTP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_username": {
            "type": "string",
            "maxLength": 255
          },
          "msp_password": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 255
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_encryption": {
            "enum": [
              "",
              "SSL_TLS"
            ],
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksSSH": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address"
        ]
      },
      "ChecksSSL_CERT": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_protocol": {
            "enum": [
              "http",
              "smtp",
              "pop3",
              "imap",
              "ftp",
              "xmpp",
              "irc",
              "ldap"
            ],
            "type": "string",
            "default": "http"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0,
            "default": 20
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          }
        },
        "required": [
          "contact_groups",
          "msp_address",
          "msp_protocol",
          "msp_threshold"
        ]
      },
      "ChecksTCP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_send_string": {
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address",
          "msp_port"
        ]
      },
      "ChecksTRANSACTION": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "default": 60,
            "minimum": 0
          },
          "msp_script": {
            "type": "string",
            "default": "[{\"step_def\": \"C_OPEN_URL\", \"values\": {\"url\": \"https://\"}}]"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 32.0
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address",
          "msp_script"
        ]
      },
      "ChecksUDP": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_interval": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "default": 5
          },
          "msp_address": {
            "type": "string"
          },
          "msp_port": {
            "type": "integer",
            "maximum": 65535,
            "minimum": 1,
            "nullable": true
          },
          "msp_send_string": {
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_sensitivity": {
            "type": "integer",
            "maximum": 2147483647,
            "default": 2,
            "minimum": 0
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_use_ip_version": {
            "enum": [
              "",
              "IPV4",
              "IPV6"
            ],
            "type": "string",
            "default": ""
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true,
            "default": 2.2
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "contact_groups",
          "msp_interval",
          "msp_address",
          "msp_port",
          "msp_send_string",
          "msp_expect_string"
        ]
      },
      "ChecksWEBHOOK": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_response_time_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.001,
            "maximum": 60.0,
            "minimum": 0.0,
            "nullable": true
          },
          "msp_notes": {
            "type": "string"
          },
          "msp_include_in_global_metrics": {
            "type": "boolean",
            "default": true
          },
          "webhook_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "contact_groups"
        ]
      },
      "ChecksWHOIS": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "alerts_url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "cached_response_time": {
            "type": "number",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs associated with this check"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations associated with this check"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of tag names or IDs associated with this check"
          },
          "check_type": {
            "type": "string",
            "readOnly": true
          },
          "escalations": {
            "type": "string",
            "readOnly": true
          },
          "maintenance": {
            "type": "string",
            "readOnly": true
          },
          "monitoring_service_type": {
            "type": "string",
            "readOnly": true
          },
          "is_paused": {
            "type": "boolean"
          },
          "is_under_maintenance": {
            "type": "boolean",
            "readOnly": true
          },
          "state_is_up": {
            "type": "boolean",
            "readOnly": true
          },
          "state_changed_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "msp_address": {
            "type": "string"
          },
          "msp_expect_string": {
            "type": "string"
          },
          "msp_threshold": {
            "type": "integer",
            "maximum": 2147483647,
            "nullable": true,
            "minimum": 0,
            "default": 20
          },
          "msp_num_retries": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "default": 2
          },
          "msp_uptime_sla": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1.0,
            "minimum": 0.0,
            "default": 0.99
          },
          "msp_notes": {
            "type": "string"
          }
        },
        "required": [
          "contact_groups",
          "msp_address",
          "msp_expect_string",
          "msp_threshold"
        ]
      },
      "Component": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "is_group": {
            "type": "boolean"
          },
          "group_id": {
            "type": "integer",
            "nullable": true
          },
          "service_id": {
            "type": "integer",
            "nullable": true
          },
          "service_url": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "enum": [
              "operational",
              "major-outage",
              "partial-outage",
              "degraded-performance",
              "under-maintenance"
            ],
            "type": "string"
          },
          "auto_set_status": {
            "enum": [
              "major-outage",
              "partial-outage",
              "degraded-performance",
              "under-maintenance"
            ],
            "type": "string"
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "ContactGroup": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of this contact",
            "maxLength": 100
          },
          "sms_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of cellphone numbers for SMS alerts (valid international phone number starting with +)"
          },
          "email_list": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "Array of email addresses to receive alerts"
          },
          "phonecall_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of cellphone numbers for voice call alerts (valid international phone number starting with +)"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of integration names or IDs associated with this contact"
          },
          "push_notification_profiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of integration names or IDs associated with this contact"
          },
          "oncall_schedule": {
            "type": "string",
            "readOnly": true,
            "description": "The on-call hours schedule for this contact"
          }
        },
        "required": [
          "name"
        ]
      },
      "ContactGroupOnCallSchedule": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "ACTIVE",
              "SUPPRESSED",
              "SCHEDULED"
            ],
            "type": "string",
            "writeOnly": true,
            "description": "Whether to use an on-call schedule. Either ACTIVE (always on call) or SCHEDULED (use defined schedule)."
          },
          "schedule": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "weekdays": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "type": {
                  "enum": [
                    "WEEKLY",
                    "MONTHLY"
                  ],
                  "type": "string"
                },
                "from_time": {
                  "type": "string"
                },
                "to_time": {
                  "type": "string"
                },
                "monthday_from": {
                  "type": "integer",
                  "maximum": 31,
                  "minimum": 0
                },
                "monthday_to": {
                  "type": "integer",
                  "maximum": 31,
                  "minimum": 0
                }
              },
              "required": [
                "weekdays",
                "type",
                "from_time",
                "to_time"
              ]
            },
            "writeOnly": true,
            "default": [],
            "description": "The schedule entries for when the contact is on-call; see example above."
          }
        },
        "required": [
          "state"
        ]
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "readOnly": true
          },
          "services_selected": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include checks from this list"
          },
          "services_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include checks with one or more of the selected tags"
          },
          "ordering": {
            "type": "integer",
            "maximum": 2147483647,
            "description": "Sidebar ordering for this dashboard",
            "minimum": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The displayed name for this dashboard",
            "maxLength": 100
          },
          "is_pinned": {
            "type": "boolean",
            "description": "Whether this dashboard is pinned to the sidebar"
          },
          "metrics_show_section": {
            "type": "boolean",
            "description": "Show/hide the Summary Metrics section at the top of this dashboard"
          },
          "metrics_for_all_checks": {
            "type": "boolean",
            "description": "Include metrics from all checks, not just the selected checks"
          },
          "services_show_section": {
            "type": "boolean",
            "description": "Show/hide the check cards from this dashboard"
          },
          "services_num_to_show": {
            "enum": [
              4,
              8,
              12,
              16,
              20
            ],
            "type": "integer",
            "description": "Number of check cards to show in the Checks section",
            "minimum": 0,
            "maximum": 2147483647
          },
          "services_include_up": {
            "type": "boolean",
            "description": "Include/exclude checks which are currently up"
          },
          "services_include_down": {
            "type": "boolean",
            "description": "Include/exclude checks which are currently down"
          },
          "services_include_paused": {
            "type": "boolean",
            "description": "Include/exclude checks which are currently paused"
          },
          "services_include_maintenance": {
            "type": "boolean",
            "description": "Include/exclude checks which are manually marked for maintenance"
          },
          "services_primary_sort": {
            "enum": [
              "cached_ordering",
              "device__address",
              "-created_at",
              "is_paused,cached_state_is_up",
              "-cached_last_down_alert_at",
              "-cached_response_time"
            ],
            "type": "string",
            "description": "The primary value for ordering the checks"
          },
          "services_secondary_sort": {
            "enum": [
              "cached_ordering",
              "device__address",
              "-created_at",
              "is_paused,cached_state_is_up",
              "-cached_last_down_alert_at",
              "-cached_response_time"
            ],
            "type": "string",
            "description": "The secondary value for ordering the checks, if the primary value is the same"
          },
          "services_show_uptime": {
            "type": "boolean",
            "description": "Show the 24h uptime percentage on each check card"
          },
          "services_show_response_time": {
            "type": "boolean",
            "description": "Show the response time graph or metric on each check card"
          },
          "alerts_show_section": {
            "type": "boolean",
            "description": "Show/hide the Latest Alerts section from this dashboard"
          },
          "alerts_for_all_checks": {
            "type": "boolean",
            "description": "Show/hide alerts globally across all checks, rather than only for checks selected in the Checks tab"
          },
          "alerts_include_ignored": {
            "type": "boolean",
            "description": "Include/exclude alerts marked as \"ignored\" in the alerts listing"
          },
          "alerts_include_resolved": {
            "type": "boolean",
            "description": "Include/exclude alerts that are no longer down in the alerts listing"
          },
          "alerts_num_to_show": {
            "enum": [
              5,
              10,
              15
            ],
            "type": "integer",
            "description": "Number of alerts to show in the Latest Alerts section",
            "minimum": 0,
            "maximum": 2147483647
          }
        }
      },
      "DashboardStats": {
        "type": "object",
        "properties": {
          "global_metrics": {
            "type": "object",
            "readOnly": true
          },
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "msp_address": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "check_type": {
                  "type": "string",
                  "readOnly": true
                },
                "monitoring_service_type": {
                  "type": "string",
                  "readOnly": true
                },
                "msp_interval": {
                  "type": "integer",
                  "readOnly": true
                },
                "is_paused": {
                  "type": "boolean",
                  "readOnly": true
                },
                "is_under_maintenance": {
                  "type": "boolean",
                  "readOnly": true
                },
                "state_is_up": {
                  "type": "boolean",
                  "readOnly": true
                },
                "state_changed_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "cached_response_time": {
                  "type": "number",
                  "readOnly": true
                },
                "response_time_datapoints": {
                  "type": "array",
                  "items": {},
                  "readOnly": true
                },
                "uptime_24h": {
                  "type": "number",
                  "readOnly": true
                }
              },
              "required": [
                "state_changed_at"
              ]
            },
            "readOnly": true
          },
          "latest_outages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "resolved_at": {
                  "type": "string",
                  "readOnly": true
                },
                "duration_secs": {
                  "type": "string",
                  "readOnly": true
                },
                "ignore_alert_url": {
                  "type": "string",
                  "readOnly": true
                },
                "check_pk": {
                  "type": "integer"
                },
                "check_url": {
                  "type": "string",
                  "readOnly": true
                },
                "check_address": {
                  "type": "string"
                },
                "check_name": {
                  "type": "string"
                },
                "check_monitoring_service_type": {
                  "type": "string"
                },
                "state_is_up": {
                  "type": "boolean"
                },
                "ignored": {
                  "type": "boolean"
                },
                "num_locations_down": {
                  "type": "integer",
                  "maximum": 2147483647,
                  "minimum": 0
                },
                "all_alerts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pk": {
                        "type": "integer",
                        "readOnly": true
                      },
                      "url": {
                        "type": "string",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "monitoring_server_name": {
                        "type": "string"
                      },
                      "monitoring_server_ipv4": {
                        "type": "string"
                      },
                      "monitoring_server_ipv6": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "output": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "created_at",
                "check_pk",
                "check_address",
                "check_name",
                "check_monitoring_service_type",
                "state_is_up",
                "num_locations_down",
                "all_alerts"
              ]
            },
            "readOnly": true
          }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of incident, eg. a problem or resolution",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "starts_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ends_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "readOnly": true
          },
          "include_in_global_metrics": {
            "type": "boolean"
          },
          "incident_type_display": {
            "type": "string",
            "readOnly": true
          },
          "updates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "description": {
                  "type": "string"
                },
                "incident_state": {
                  "enum": [
                    "investigating",
                    "identified",
                    "monitoring",
                    "resolved",
                    "notification",
                    "maintenance"
                  ],
                  "type": "string"
                },
                "incident_state_display": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "incident_state"
              ]
            }
          },
          "affected_components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "status": {
                  "enum": [
                    "major-outage",
                    "partial-outage",
                    "degraded-performance",
                    "under-maintenance"
                  ],
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "description": {
                  "type": "string",
                  "readOnly": true
                },
                "component": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "status",
                "component"
              ]
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "incident_state": {
            "type": "string",
            "readOnly": true
          },
          "incident_type": {
            "enum": [
              "INCIDENT",
              "SCHEDULED_MAINTENANCE"
            ],
            "type": "string"
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "update_component_status": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "updates",
          "incident_type"
        ]
      },
      "Incidents": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "ignore_alert_url": {
            "type": "string",
            "readOnly": true
          },
          "check_pk": {
            "type": "integer"
          },
          "check_url": {
            "type": "string",
            "readOnly": true
          },
          "check_address": {
            "type": "string"
          },
          "check_name": {
            "type": "string"
          },
          "check_monitoring_service_type": {
            "type": "string"
          },
          "state_is_up": {
            "type": "boolean"
          },
          "ignored": {
            "type": "boolean"
          },
          "num_locations_down": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "all_alerts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "monitoring_server_name": {
                  "type": "string"
                },
                "monitoring_server_ipv4": {
                  "type": "string"
                },
                "monitoring_server_ipv6": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "output": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "created_at",
          "check_pk",
          "check_address",
          "check_name",
          "check_monitoring_service_type",
          "state_is_up",
          "num_locations_down",
          "all_alerts"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationCachet": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Root URL of your Cachet installation.",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "token": {
            "type": "string",
            "description": "Your API token."
          },
          "component": {
            "type": "string",
            "description": "Component to update with availability status."
          },
          "metric": {
            "type": "string",
            "description": "Metric to update with response time data."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationDatadog": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_key": {
            "type": "string"
          },
          "app_key": {
            "type": "string"
          },
          "region": {
            "enum": [
              "US",
              "EU"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationGeckoboard": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_key": {
            "type": "string"
          },
          "dataset_name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationJiraservicedesk": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_email": {
            "type": "string",
            "description": "Email of the user whose API token is being used."
          },
          "api_token": {
            "type": "string",
            "description": "API Token created for the user, or the user's password (self-hosted only)."
          },
          "jira_subdomain": {
            "type": "string",
            "format": "uri",
            "description": "The domain your company uses to access Jira, e.g. \"https://your-domain.atlassian.net\"",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "project_key": {
            "type": "string",
            "description": "The project key of your Service Desk project, shown on the Project Settings > Details page. E.g. \"SMPSRVDESK\""
          },
          "labels": {
            "type": "string",
            "description": "A comma separated list of labels attached to each incident created. The \"Uptime.com\" label any associated check tags are always set."
          },
          "custom_field_id_account_name": {
            "type": "integer",
            "description": "An optional ID for a custom text field that should receive the account name."
          },
          "custom_field_id_check_name": {
            "type": "integer",
            "description": "An optional ID for a custom text field that should receive the check name."
          },
          "custom_field_id_check_url": {
            "type": "integer",
            "description": "An optional ID for a custom text field that should receive the check URL."
          },
          "custom_fields_json": {
            "type": "string",
            "description": "\n<div class=\"dropdown\">\n  Advanced configuration for custom fields using JSON format. See\n  <a href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">example values</a>.\n  <div class=\"dropdown-menu border dark-shadow\" style=\"width: 37rem;\" aria-labelledby=\"dropdownMenuLink\">\n<pre><code>\n  {\n    \"customfield_10000\": \"this is a text field\",\n    \"customfield_20000\": \"this is a multi-line text field. big text.\",\n    \"customfield_30000\": \"2011-07-13T15:25:00\",\n    \"customfield_40000\": {\n      \"value\": \"this is a select list value\"\n    },\n    \"customfield_50000\": {\n      \"name\": \"this is a group picker value\"\n    },\n    \"customfield_60000\": [\n      {\"value\": \"this is a multi select list value #1\"},\n      {\"value\": \"this is a multi select list value #2\"}\n    ],\n  }\n</code></pre>\n  </div>\n</div>\n"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationKlipfolio": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_key": {
            "type": "string"
          },
          "data_source_name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationLibrato": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address which you registered with at Librato"
          },
          "api_token": {
            "type": "string"
          },
          "metric_name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationMicrosoft_Teams": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationOpsgenie": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_endpoint": {
            "type": "string",
            "format": "uri",
            "description": "Listed on the Integrations / Configured Integrations page in OpsGenie.",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "api_key": {
            "type": "string",
            "description": "Listed on the Integrations / Configured Integrations page in OpsGenie."
          },
          "teams": {
            "type": "string",
            "description": "A comma separated list of team names which will be responsible for the alert."
          },
          "tags": {
            "type": "string",
            "description": "A comma separated list of labels attached to the alert. You may overwrite the quiet hours setting for urgent alerts by adding the OverwriteQuietHours tag."
          },
          "autoresolve": {
            "type": "boolean",
            "description": "Automatically resolve incident once the check is back up."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationPagerduty": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "service_key": {
            "type": "string",
            "description": "Listed on the Service's details page, Integrations tab."
          },
          "autoresolve": {
            "type": "boolean",
            "description": "Automatically resolve this incident once the check is back up."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationPushbullet": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email used in creating your Pushbullet account."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationPushover": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "description": "This may be your user key or a group key."
          },
          "priority": {
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Priorities higher then normal will override recipient's quiet hours."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationSignifai": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "postback_url": {
            "type": "string",
            "format": "uri",
            "description": "SignifAI Web Collector URL",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationSlack": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "channel": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationStatus": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "statuspage_id": {
            "type": "string",
            "description": "Listed on the API page."
          },
          "api_id": {
            "type": "string",
            "description": "Listed on the API page."
          },
          "api_key": {
            "type": "string",
            "description": "Listed on the API page."
          },
          "component": {
            "type": "string",
            "description": "Component to update with availability status. Listed in the Infrastructure / Modify Component / API section."
          },
          "container": {
            "type": "string",
            "description": "Container to update with availability status. Listed in the Infrastructure / Modify Component / API section."
          },
          "metric": {
            "type": "string",
            "description": "Metric to update with response time data. Listed on the Metrics / Modify Metric page when setting Data Source to Custom."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationStatuspage": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "api_key": {
            "type": "string",
            "description": "Listed on the Manage Account / API page."
          },
          "page": {
            "type": "string",
            "description": "Listed on the Manage Account / API page."
          },
          "component": {
            "type": "string",
            "description": "Component to update with availability status, see instructions below."
          },
          "metric": {
            "type": "string",
            "description": "Metric to update with response time data. Listed in Public Metrics / Edit Metric / Advanced Options."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationTwitter": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "oauth_token": {
            "type": "string"
          },
          "oauth_token_secret": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationVictorops": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "service_key": {
            "type": "string",
            "description": "Listed on the Settings / API page"
          },
          "routing_key": {
            "type": "string",
            "description": "Routing key determines to which team alerts and incidents will be routed."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationWavefront": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "wavefront_url": {
            "type": "string",
            "format": "uri",
            "description": "Root URL of your Wavefront service, eg. https://longboard.wavefront.com.",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "api_token": {
            "type": "string",
            "description": "Your API token."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationWebhook": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "postback_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL you would like the alert details sent by HTTP POST.",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "headers": {
            "type": "string",
            "description": "Optional custom HTTP headers in \"Name: Value\" format."
          },
          "use_legacy_payload": {
            "type": "boolean",
            "description": "Maintain compatibility with legacy handlers."
          }
        },
        "required": [
          "name"
        ]
      },
      "IntegrationZapier": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Your preferred name for this integration.",
            "maxLength": 256
          },
          "module": {
            "type": "string",
            "readOnly": true,
            "description": "The provider of the integration."
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs this integration is assigned to"
          },
          "is_errored": {
            "type": "boolean",
            "readOnly": true
          },
          "last_error": {
            "type": "string",
            "readOnly": true
          },
          "webhook_url": {
            "type": "string",
            "format": "uri",
            "description": "The Webhook URL for triggering the alert in Zapier.",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          }
        },
        "required": [
          "name"
        ]
      },
      "MagicLink": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true,
            "description": "Email address to send magic link."
          }
        },
        "required": [
          "email"
        ]
      },
      "Metric": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "service_type": {
            "type": "string",
            "readOnly": true
          },
          "service_name": {
            "type": "string",
            "readOnly": true
          },
          "service_id": {
            "type": "integer"
          },
          "service_url": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "is_visible": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "service_id"
        ]
      },
      "Outages": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resolved_at": {
            "type": "string",
            "readOnly": true
          },
          "duration_secs": {
            "type": "string",
            "readOnly": true
          },
          "ignore_alert_url": {
            "type": "string",
            "readOnly": true
          },
          "check_pk": {
            "type": "integer"
          },
          "check_url": {
            "type": "string",
            "readOnly": true
          },
          "check_address": {
            "type": "string"
          },
          "check_name": {
            "type": "string"
          },
          "check_monitoring_service_type": {
            "type": "string"
          },
          "state_is_up": {
            "type": "boolean"
          },
          "ignored": {
            "type": "boolean"
          },
          "num_locations_down": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "all_alerts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "monitoring_server_name": {
                  "type": "string"
                },
                "monitoring_server_ipv4": {
                  "type": "string"
                },
                "monitoring_server_ipv6": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "output": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "created_at",
          "check_pk",
          "check_address",
          "check_name",
          "check_monitoring_service_type",
          "state_is_up",
          "num_locations_down",
          "all_alerts"
        ]
      },
      "PasswordReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true,
            "description": "Email address to send password recovery link."
          }
        },
        "required": [
          "email"
        ]
      },
      "PushNotificationProfile": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "uuid": {
            "type": "string",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "readOnly": true
          },
          "device_name": {
            "type": "string",
            "maxLength": 255
          },
          "display_name": {
            "type": "string",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs to this push notification will receive alerts for."
          }
        },
        "required": [
          "device_name",
          "contact_groups"
        ]
      },
      "PushNotificationProfileCreate": {
        "type": "object",
        "properties": {
          "app_key": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 32,
            "minLength": 32
          },
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "uuid": {
            "type": "string"
          },
          "user": {
            "type": "string",
            "readOnly": true
          },
          "device_name": {
            "type": "string",
            "maxLength": 255
          },
          "display_name": {
            "type": "string",
            "readOnly": true
          },
          "contact_groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contact names or IDs to this push notification will receive alerts for."
          }
        },
        "required": [
          "app_key",
          "device_name",
          "contact_groups"
        ]
      },
      "ResponseTime": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true,
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true,
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "response_time": {
            "type": "object",
            "readOnly": true
          }
        }
      },
      "SLAReport": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "stats_url": {
            "type": "string",
            "readOnly": true
          },
          "services_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include checks with one or more of the selected tags"
          },
          "services_selected": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include checks from this list"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of this SLA report",
            "maxLength": 100
          },
          "default_date_range": {
            "enum": [
              "TODAY",
              "YESTERDAY",
              "LAST_7D",
              "LAST_30D",
              "THIS_WEEK",
              "LAST_WEEK",
              "THIS_MONTH",
              "LAST_MONTH"
            ],
            "type": "string"
          },
          "show_uptime_section": {
            "type": "boolean"
          },
          "show_uptime_sla": {
            "type": "boolean"
          },
          "filter_with_downtime": {
            "type": "boolean"
          },
          "filter_uptime_sla_violations": {
            "type": "boolean"
          },
          "uptime_section_sort": {
            "enum": [
              "BY_UPTIME",
              "BY_SLA"
            ],
            "type": "string"
          },
          "show_response_time_section": {
            "type": "boolean"
          },
          "show_response_time_sla": {
            "type": "boolean"
          },
          "filter_slowest": {
            "type": "boolean"
          },
          "filter_response_time_sla_violations": {
            "type": "boolean"
          },
          "response_time_section_sort": {
            "enum": [
              "BY_RESPONSE_TIME",
              "BY_SLA"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "SLAReportStats": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "The first day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "description": "The last day to show statistics for in ISO 8601 (YYYY-MM-DDTHH:MM:SSZ) format."
          },
          "output": {
            "enum": [
              "json",
              "pdf",
              "xls"
            ],
            "type": "string",
            "writeOnly": true,
            "description": "The output format of the report: [json, pdf, xls]"
          },
          "has_response_time_data": {
            "type": "boolean",
            "readOnly": true
          },
          "uses_daily_response_time_data": {
            "type": "boolean",
            "readOnly": true
          },
          "uptime": {
            "type": "object",
            "readOnly": true
          },
          "response_time": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "readOnly": true
          }
        }
      },
      "ScheduledReport": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "sla_report": {
            "type": "string",
            "nullable": true,
            "description": "Select an SLA report to send on this schedule"
          },
          "recipient_users": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select the users that should receive this report"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of this scheduled report",
            "maxLength": 100
          },
          "file_type": {
            "enum": [
              "PDF",
              "XLS"
            ],
            "type": "string"
          },
          "recurrence": {
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "YEARLY"
            ],
            "type": "string",
            "description": "How often to deliver this report"
          },
          "on_weekday": {
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer",
            "description": "Weekly reports will be sent on this day",
            "minimum": 0,
            "maximum": 32767
          },
          "at_time": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23
            ],
            "type": "integer",
            "description": "Reports will be sent at this time (local time)",
            "minimum": 0,
            "maximum": 32767
          },
          "is_enabled": {
            "type": "boolean"
          },
          "recipient_emails": {
            "type": "object",
            "description": "Additional emails that will receive this report"
          }
        },
        "required": [
          "name"
        ]
      },
      "StatusPage": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "page_type": {
            "enum": [
              "PUBLIC",
              "PUBLIC_SLA",
              "INTERNAL"
            ],
            "type": "string"
          },
          "public_url": {
            "type": "string",
            "readOnly": true
          },
          "private_url": {
            "type": "string",
            "readOnly": true
          },
          "cname_url": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "incidents_url": {
            "type": "string",
            "readOnly": true
          },
          "components_url": {
            "type": "string",
            "readOnly": true
          },
          "metrics_url": {
            "type": "string",
            "readOnly": true
          },
          "history_url": {
            "type": "string",
            "readOnly": true
          },
          "current_status_url": {
            "type": "string",
            "readOnly": true
          },
          "is_public": {
            "type": "boolean"
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "pattern": "^[\\w\\-\\.]{3,}$",
            "maxLength": 100,
            "minLength": 3
          },
          "page_type_display": {
            "type": "string",
            "readOnly": true
          },
          "cname": {
            "type": "string",
            "nullable": true,
            "pattern": "^[a-z0-9\\-\\.]+$",
            "maxLength": 255
          },
          "allow_subscriptions": {
            "type": "boolean"
          },
          "allow_search_indexing": {
            "type": "boolean"
          },
          "allow_drill_down": {
            "type": "boolean"
          },
          "auth_username": {
            "type": "string",
            "maxLength": 100
          },
          "auth_password": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 100
          },
          "description_html": {
            "type": "string",
            "readOnly": true
          },
          "show_status_tab": {
            "type": "boolean"
          },
          "show_active_incidents": {
            "type": "boolean"
          },
          "show_component_response_time": {
            "type": "boolean"
          },
          "show_history_tab": {
            "type": "boolean"
          },
          "default_history_date_range": {
            "type": "integer",
            "maximum": 90,
            "minimum": 0
          },
          "uptime_calculation_type": {
            "enum": [
              "BY_INCIDENTS",
              "BY_CHECKS"
            ],
            "type": "string"
          },
          "show_history_snake": {
            "type": "boolean"
          },
          "show_component_history": {
            "type": "boolean"
          },
          "show_summary_metrics": {
            "type": "boolean"
          },
          "show_past_incidents": {
            "type": "boolean"
          },
          "allow_pdf_report": {
            "type": "boolean"
          },
          "google_analytics_code": {
            "type": "string",
            "maxLength": 1024
          },
          "contact_email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "email_from": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "email_reply_to": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "custom_header_html": {
            "type": "string"
          },
          "custom_footer_html": {
            "type": "string"
          },
          "custom_css": {
            "type": "string"
          },
          "email_logo_url": {
            "type": "string",
            "readOnly": true
          },
          "logo_url": {
            "type": "string",
            "readOnly": true
          },
          "favicon_url": {
            "type": "string",
            "readOnly": true
          },
          "company_website_url": {
            "type": "string",
            "format": "uri",
            "maxLength": 200,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          }
        },
        "required": [
          "name",
          "page_type"
        ]
      },
      "StatusPageCurrentStatus": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "page_type": {
            "enum": [
              "PUBLIC",
              "PUBLIC_SLA",
              "INTERNAL"
            ],
            "type": "string"
          },
          "public_url": {
            "type": "string",
            "readOnly": true
          },
          "private_url": {
            "type": "string",
            "readOnly": true
          },
          "cname_url": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "incidents_url": {
            "type": "string",
            "readOnly": true
          },
          "components_url": {
            "type": "string",
            "readOnly": true
          },
          "metrics_url": {
            "type": "string",
            "readOnly": true
          },
          "history_url": {
            "type": "string",
            "readOnly": true
          },
          "current_status_url": {
            "type": "string",
            "readOnly": true
          },
          "global_is_operational": {
            "type": "boolean"
          },
          "active_incidents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of incident, eg. a problem or resolution",
                  "maxLength": 255
                },
                "description": {
                  "type": "string",
                  "readOnly": true
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "duration": {
                  "type": "string",
                  "readOnly": true
                },
                "include_in_global_metrics": {
                  "type": "boolean"
                },
                "incident_type_display": {
                  "type": "string",
                  "readOnly": true
                },
                "updates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": {
                        "type": "string"
                      },
                      "incident_state": {
                        "enum": [
                          "investigating",
                          "identified",
                          "monitoring",
                          "resolved",
                          "notification",
                          "maintenance"
                        ],
                        "type": "string"
                      },
                      "incident_state_display": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "incident_state"
                    ]
                  }
                },
                "affected_components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "enum": [
                          "major-outage",
                          "partial-outage",
                          "degraded-performance",
                          "under-maintenance"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true
                      },
                      "description": {
                        "type": "string",
                        "readOnly": true
                      },
                      "component": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "component"
                    ]
                  },
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "incident_state": {
                  "type": "string",
                  "readOnly": true
                },
                "incident_type": {
                  "enum": [
                    "INCIDENT",
                    "SCHEDULED_MAINTENANCE"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "update_component_status": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "updates",
                "incident_type"
              ]
            }
          },
          "upcoming_maintenance": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of incident, eg. a problem or resolution",
                  "maxLength": 255
                },
                "description": {
                  "type": "string",
                  "readOnly": true
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "duration": {
                  "type": "string",
                  "readOnly": true
                },
                "include_in_global_metrics": {
                  "type": "boolean"
                },
                "incident_type_display": {
                  "type": "string",
                  "readOnly": true
                },
                "updates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": {
                        "type": "string"
                      },
                      "incident_state": {
                        "enum": [
                          "investigating",
                          "identified",
                          "monitoring",
                          "resolved",
                          "notification",
                          "maintenance"
                        ],
                        "type": "string"
                      },
                      "incident_state_display": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "incident_state"
                    ]
                  }
                },
                "affected_components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "enum": [
                          "major-outage",
                          "partial-outage",
                          "degraded-performance",
                          "under-maintenance"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true
                      },
                      "description": {
                        "type": "string",
                        "readOnly": true
                      },
                      "component": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "component"
                    ]
                  },
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "incident_state": {
                  "type": "string",
                  "readOnly": true
                },
                "incident_type": {
                  "enum": [
                    "INCIDENT",
                    "SCHEDULED_MAINTENANCE"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "update_component_status": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "updates",
                "incident_type"
              ]
            }
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 100
                },
                "description": {
                  "type": "string"
                },
                "is_group": {
                  "type": "boolean"
                },
                "group_id": {
                  "type": "integer",
                  "nullable": true
                },
                "service_id": {
                  "type": "integer",
                  "nullable": true
                },
                "service_url": {
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "enum": [
                    "operational",
                    "major-outage",
                    "partial-outage",
                    "degraded-performance",
                    "under-maintenance"
                  ],
                  "type": "string"
                },
                "auto_set_status": {
                  "enum": [
                    "major-outage",
                    "partial-outage",
                    "degraded-performance",
                    "under-maintenance"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 100
                },
                "service_type": {
                  "type": "string",
                  "readOnly": true
                },
                "service_name": {
                  "type": "string",
                  "readOnly": true
                },
                "service_id": {
                  "type": "integer"
                },
                "service_url": {
                  "type": "string",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "is_visible": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "service_id"
              ]
            }
          }
        },
        "required": [
          "name",
          "page_type",
          "global_is_operational",
          "active_incidents",
          "upcoming_maintenance",
          "components",
          "metrics"
        ]
      },
      "StatusPageHistory": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "page_type": {
            "enum": [
              "PUBLIC",
              "PUBLIC_SLA",
              "INTERNAL"
            ],
            "type": "string"
          },
          "public_url": {
            "type": "string",
            "readOnly": true
          },
          "private_url": {
            "type": "string",
            "readOnly": true
          },
          "cname_url": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "incidents_url": {
            "type": "string",
            "readOnly": true
          },
          "components_url": {
            "type": "string",
            "readOnly": true
          },
          "metrics_url": {
            "type": "string",
            "readOnly": true
          },
          "history_url": {
            "type": "string",
            "readOnly": true
          },
          "current_status_url": {
            "type": "string",
            "readOnly": true
          },
          "component_history": {
            "type": "string",
            "readOnly": true
          },
          "date_history": {
            "type": "string",
            "readOnly": true
          },
          "global_metrics": {
            "type": "string",
            "readOnly": true
          },
          "past_incidents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pk": {
                  "type": "integer",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of incident, eg. a problem or resolution",
                  "maxLength": 255
                },
                "description": {
                  "type": "string",
                  "readOnly": true
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "duration": {
                  "type": "string",
                  "readOnly": true
                },
                "include_in_global_metrics": {
                  "type": "boolean"
                },
                "incident_type_display": {
                  "type": "string",
                  "readOnly": true
                },
                "updates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "description": {
                        "type": "string"
                      },
                      "incident_state": {
                        "enum": [
                          "investigating",
                          "identified",
                          "monitoring",
                          "resolved",
                          "notification",
                          "maintenance"
                        ],
                        "type": "string"
                      },
                      "incident_state_display": {
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "incident_state"
                    ]
                  }
                },
                "affected_components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "status": {
                        "enum": [
                          "major-outage",
                          "partial-outage",
                          "degraded-performance",
                          "under-maintenance"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true
                      },
                      "description": {
                        "type": "string",
                        "readOnly": true
                      },
                      "component": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "component"
                    ]
                  },
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "incident_state": {
                  "type": "string",
                  "readOnly": true
                },
                "incident_type": {
                  "enum": [
                    "INCIDENT",
                    "SCHEDULED_MAINTENANCE"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "readOnly": true
                },
                "update_component_status": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "updates",
                "incident_type"
              ]
            }
          },
          "uptime_calculation_type": {
            "enum": [
              "BY_INCIDENTS",
              "BY_CHECKS"
            ],
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "page_type",
          "past_incidents",
          "start_date",
          "end_date"
        ]
      },
      "Subaccount": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "SubaccountPacks": {
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "writeOnly": true,
            "description": "Number of packs to be transferred"
          }
        },
        "required": [
          "num"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "description": "The user's first name",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "description": "The user's first name",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email address, used as their username",
            "maxLength": 150
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "description": "The user's password",
            "maxLength": 128
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether this user account is active or disabled"
          },
          "is_primary": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether this user is the account owner"
          },
          "access_level": {
            "enum": [
              "10-READ",
              "30-WRITE",
              "50-ADMIN"
            ],
            "type": "string",
            "description": "The permission level for this user"
          },
          "is_api_enabled": {
            "type": "boolean",
            "description": "Whether this user may access the API"
          },
          "notify_paid_invoices": {
            "type": "boolean",
            "description": "Whether this user should receive new invoices"
          },
          "assigned_subaccounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Which subaccounts this user may access, or empty for All Subaccounts."
          },
          "require_two_factor": {
            "enum": [
              "ACCOUNT_DEFAULT",
              "REQUIRE",
              "DO_NOT_REQUIRE"
            ],
            "type": "string"
          },
          "must_two_factor": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email"
        ]
      }
    }
  }
}